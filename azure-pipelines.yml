trigger:
  branches:
    include:
      - main
      - master
      - develop
      - feature/*
      - bugfix/*
      - hotfix/*
      - release/*

pr:
  branches:
    include:
      - main
      - master
      - develop
  paths:
    exclude:
      - README.md
      - docs/*
      - '*.md'

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

steps:
  - task: UseDotNet@2
    displayName: 'Install .NET 9 SDK'
    inputs:
      packageType: 'sdk'
      version: '9.x'
      includePreviewVersions: true

  - script: dotnet restore DemoCLI.sln
    displayName: 'Restore dependencies'

  - script: dotnet build DemoCLI.sln --configuration $(buildConfiguration) --no-restore
    displayName: 'Build solution'

  - script: dotnet test DemoCLI.sln --configuration $(buildConfiguration) --no-build --verbosity normal --logger trx --results-directory $(Agent.TempDirectory)
    displayName: 'Run unit tests'

  - task: PublishTestResults@2
    displayName: 'Publish test results'
    condition: succeededOrFailed()
    inputs:
      testResultsFormat: 'VSTest'
      testResultsFiles: '**/*.trx'
      searchFolder: '$(Agent.TempDirectory)'
      mergeTestResults: true
      failTaskOnFailedTests: true

  - script: dotnet publish DemoCLI.sln --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/publish
    displayName: 'Publish application'

  - task: ArchiveFiles@2
    displayName: 'Create ZIP artifact'
    inputs:
      rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/publish'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/DemoCLI-$(Build.BuildId).zip'
      replaceExistingArchive: true

  - task: PublishBuildArtifacts@1
    displayName: 'Publish ZIP artifact'
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)/DemoCLI-$(Build.BuildId).zip'
      artifactName: 'drop'
